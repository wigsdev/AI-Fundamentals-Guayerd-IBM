# -*- coding: utf-8 -*-
# Proyecto: Tienda Aurelion - 1¬∞ Demo Asincr√≥nica
# Curso: Fundamentos de Inteligencia Artificial (IBM)
# Descripci√≥n: Textos de documentaci√≥n para el visor interactivo.

# -------------------------------------------------------
# 1. Tema, problema y soluci√≥n
# -------------------------------------------------------
tema_problema_solucion = """
1Ô∏è‚É£ Tema, problema y soluci√≥n

üß† Tema:
Gesti√≥n de datos de una tienda minorista mediante la integraci√≥n de informaci√≥n de clientes, productos y transacciones de venta.
El proyecto "Tienda Aurelion" utiliza datos sint√©ticos representativos de un comercio real para comprender c√≥mo los sistemas de informaci√≥n pueden organizar, describir y analizar datos comerciales.

‚ö†Ô∏è Problema:
La tienda almacena sus registros en distintos archivos (clientes, productos, ventas y detalle_ventas), sin un sistema central que permita comprender la estructura y relaci√≥n entre ellos.
Esta fragmentaci√≥n de la informaci√≥n dificulta tareas clave como:
- identificar los productos m√°s vendidos o las categor√≠as con mayor demanda,
- analizar los medios de pago m√°s utilizados,
- conocer la evoluci√≥n de clientes por ciudad o fecha de alta,
- realizar proyecciones basadas en datos hist√≥ricos.
En consecuencia, el negocio carece de una visi√≥n integrada y anal√≠tica de su operaci√≥n, lo que limita la toma de decisiones basadas en evidencia.

üí° Soluci√≥n:
Desarrollar un visor interactivo de documentaci√≥n en Python que permite explorar, desde la terminal, toda la informaci√≥n descriptiva del proyecto:
- tema y prop√≥sito,
- definici√≥n y estructura del dataset,
- descripci√≥n de las tablas y escalas de medici√≥n,
- sugerencias de mejora para futuras etapas.
El objetivo de esta primera entrega es entender los datos antes de procesarlos o analizarlos.
El visor constituye el primer componente de una soluci√≥n anal√≠tica m√°s amplia, en la que luego podr√°n incorporarse visualizaciones y modelos predictivos.
"""

# -------------------------------------------------------
# 2. Dataset de referencia
# -------------------------------------------------------
dataset_referencia = """
2Ô∏è‚É£ Dataset de referencia

Fuente:
Datos sint√©ticos generados con fines educativos, para representar la operaci√≥n de una tienda minorista.

Definici√≥n:
Conjunto de archivos que simulan un entorno de ventas, integrando cat√°logo de productos, registro de clientes, operaciones de venta y detalles de cada transacci√≥n.
"""

# -------------------------------------------------------
# 3. Estructura por tabla
# -------------------------------------------------------
estructura_tablas = """
3Ô∏è‚É£ Estructura por tabla

üõçÔ∏è Productos (productos.csv)
| Campo | Tipo | Escala |
| :--- | :--- | :--- |
| id_producto | int | Nominal |
| nombre_producto | str | Nominal |
| categoria | str | Nominal |
| precio_unitario | int | Raz√≥n |

üë• Clientes (clientes.csv)
| Campo | Tipo | Escala |
| :--- | :--- | :--- |
| id_cliente | int | Nominal |
| nombre_cliente | str | Nominal |
| email | str | Nominal |
| ciudad | str | Nominal |
| fecha_alta | date | Intervalo |

üí≥ Ventas (ventas.csv)
| Campo | Tipo | Escala |
| :--- | :--- | :--- |
| id_venta | int | Nominal |
| fecha | date | Intervalo |
| id_cliente | int | Nominal |
| nombre_cliente | str | Nominal |
| email | str | Nominal |
| medio_pago | str | Nominal |

üì¶ Detalle_Ventas (detalle_ventas.csv)
| Campo | Tipo | Escala |
| :--- | :--- | :--- |
| id_venta | int | Nominal |
| id_producto | int | Nominal |
| nombre_producto | str | Nominal |
| cantidad | int | Raz√≥n |
| precio_unitario | int | Raz√≥n |
| importe | int | Raz√≥n |
"""

# -------------------------------------------------------
# 4. Escalas de medici√≥n
# -------------------------------------------------------
escalas_medicion = """
4Ô∏è‚É£ Escalas de medici√≥n

Las escalas de medici√≥n permiten clasificar los datos seg√∫n su tipo y nivel de an√°lisis. En este proyecto se utilizan las siguientes:

- **Nominal:** identifican elementos sin un orden cuantitativo.
  Ejemplo: id_cliente, nombre_producto, categoria, ciudad, medio_pago.
- **Intervalo:** valores num√©ricos con diferencias medibles pero sin un cero absoluto.
  Ejemplo: fecha_alta, fecha (fechas de alta y de venta).
- **Raz√≥n:** datos num√©ricos con cero absoluto que permiten operaciones aritm√©ticas.
  Ejemplo: cantidad, precio_unitario, importe.
"""

# -------------------------------------------------------
# 5. Sugerencias y mejoras con Copilot
# -------------------------------------------------------
sugerencias_copilot = """
5Ô∏è‚É£ Sugerencias y mejoras aplicadas con Copilot

‚úÖ Aplicadas:
- Separar la documentaci√≥n en plantillas reutilizables (textos.py).
- Limpiar la pantalla antes de mostrar el men√∫.
- Agregar pausa tras mostrar resultados.

üöß Pendientes:
- Implementar modo "b√∫squeda" de palabras clave.
- Agregar opci√≥n "exportar secci√≥n" a archivo .txt o .md.
- Incluir tests autom√°ticos para verificar la opci√≥n seleccionada.
"""
